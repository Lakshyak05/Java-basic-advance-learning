import org.w3c.dom.Node;import java.sql.SQLOutput;public class LLbasics {    //method to display Linked list    public static void display(Node head){        Node temp = head;        while(temp!=null){            System.out.print(temp.data + " ");            temp = temp.next;        }    }    //method to display linked list recursively    public static void displayRecursively(Node head){        if(head == null){            return;        }        System.out.print(head.data + " ");        displayRecursively(head.next);    }    //display linked list in reverse order recursively    public static void displayReverse(Node head){        if(head == null){            return;        }        displayReverse(head.next);        System.out.print(head.data + " ");    }    //method to display length of LL    public static int length(Node head){        int count = 0;        Node temp = head;        while(temp!=null){            count++;            temp = temp.next;        }        return count;    }    public static class Node{        int data; //value        Node next;        Node(int data){            this.data = data;        }    }    public static void main(String[] args) {        Node a = new Node(5);        Node b = new Node(3);        Node c = new Node(9);        Node d = new Node(8);        Node e = new Node(16);        //5  3  8  9  16        a.next = b;  //5 -> 3  8  9  16        b.next = c;  //5 -> 3 -> 8  9  16        c.next = d;  //5 -> 3 -> 8 -> 9  16        d.next = e;  //5 -> 3 -> 8 -> 9 -> 16//        System.out.println(a.data);//        System.out.println(b.data);//        System.out.println(c.data);//        System.out.println(d.data);//        System.out.println(e.data);//        System.out.println(a.data);//        System.out.println(a.next.data);//        System.out.println(a.next.next.data);//        System.out.println(a.next.next.next.data);//        System.out.println(a.next.next.next.next.data);        // code to display linked list//        Node temp = a;//        while(temp!=null){//            System.out.print(temp.data + " ");//            temp = temp.next;//        }        display(a);             // displaying LL with loop        System.out.println();        displayRecursively(a);  // displaying LL with recursion        System.out.println();        displayReverse(a);      // displaying LL in reverse order        System.out.println();        System.out.println(length(a));    }}