import java.util.*;//import java.util.ArrayList;//import java.util.List;public class palindrome_partitioning {    public List<List<String>> partition(String s) {        List<List<String>> result = new ArrayList<>();        List<String> currentPartition = new ArrayList<>();        partitionHelper(s, 0, currentPartition, result);        return result;    }    private void partitionHelper(String s, int startIndex, List<String> currentPartition, List<List<String>> result) {        if (startIndex == s.length()) {            result.add(new ArrayList<>(currentPartition));            return;        }        for (int endIndex = startIndex; endIndex < s.length(); endIndex++) {            if (isPalindrome(s, startIndex, endIndex)) {                String substring = s.substring(startIndex, endIndex + 1);                currentPartition.add(substring);                partitionHelper(s, endIndex + 1, currentPartition, result);                currentPartition.remove(currentPartition.size() - 1); // Backtrack            }        }    }    private boolean isPalindrome(String s, int start, int end) {        while (start < end) {            if (s.charAt(start) != s.charAt(end)) {                return false;            }            start++;            end--;        }        return true;    }    public static void main(String[] args) {        palindrome_partitioning solution = new palindrome_partitioning();        // Example 1        String s1 = "aab";        System.out.println(solution.partition(s1)); // Output: [["a","a","b"],["aa","b"]]        // Example 2        String s2 = "a";        System.out.println(solution.partition(s2)); // Output: [["a"]]    }}